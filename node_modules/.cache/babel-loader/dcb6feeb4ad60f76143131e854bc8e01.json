{"ast":null,"code":"var _jsxFileName = \"/Users/minic/Projects/tetris/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport Block from './components/Block';\nconst quadBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 4,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 4,\n  y: 1\n}];\nconst lineBlock = [{\n  x: 4,\n  y: 0\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 4,\n  y: 2\n}, {\n  x: 4,\n  y: 3\n}];\nconst tBlock = [{\n  x: 4,\n  y: 0\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 5,\n  y: 1\n}];\nconst zBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 4,\n  y: 0\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 5,\n  y: 1\n}];\nconst sBlock = [{\n  x: 4,\n  y: 0\n}, {\n  x: 3,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 2,\n  y: 1\n}];\nconst rBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 2,\n  y: 1\n}, {\n  x: 1,\n  y: 1\n}];\nconst backRBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 5,\n  y: 1\n}];\nconst blocks = [quadBlock, lineBlock, tBlock, zBlock, sBlock, rBlock, backRBlock];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      matrix: new Array(24).fill(new Array(10).fill(0)),\n      blockPos: blocks[Math.floor(Math.random() * 7)]\n    };\n\n    this.moveBlockDown = () => {\n      const {\n        matrix,\n        blockPos\n      } = this.state;\n      console.log(blockPos);\n      let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0));\n      let newBlockPos = blockPos.map(cellPos => ({ ...cellPos\n      }));\n      newBlockPos = newBlockPos.map(cellPos => {\n        newMatrix[cellPos.y][cellPos.x] = 1;\n\n        if (cellPos.y >= matrix.length - 1 || newMatrix[cellPos.y + 1][cellPos.x] === 2) {\n          return true;\n        } else {\n          return { ...cellPos,\n            y: cellPos.y + 1\n          };\n        }\n      });\n      const floorCheck = newBlockPos.find(cell => cell === true);\n      const randomBlock = Math.floor(Math.random() * 8);\n\n      if (floorCheck) {\n        newMatrix = newMatrix.map(row => row.map(cell => cell === 1 ? 2 : cell));\n        newBlockPos = blocks[randomBlock];\n      }\n\n      this.setState({\n        matrix: newMatrix,\n        blockPos: newBlockPos\n      });\n    };\n\n    this.moveBlockX = side => {\n      const {\n        matrix,\n        blockPos\n      } = this.state;\n      const isLeftWall = Boolean(blockPos.find(cellPos => cellPos.x === 0));\n      const isRightWall = Boolean(blockPos.find(cellPos => cellPos.x === 9));\n\n      if (side > 0 && isRightWall) {\n        return null;\n      }\n\n      if (side < 0 && isLeftWall) {\n        return null;\n      }\n\n      let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0));\n      let newBlockPos = blockPos.map(cellPos => ({ ...cellPos,\n        x: cellPos.x + side\n      }));\n      newBlockPos.map(cellPos => {\n        newMatrix[cellPos.y][cellPos.x] = 1;\n      });\n      this.setState({\n        blockPos: newBlockPos,\n        matrix: newMatrix\n      });\n    };\n\n    this.blockControls = e => {\n      switch (e.key) {\n        case 'ArrowLeft':\n          this.moveBlockX(-1);\n          break;\n\n        case 'ArrowRight':\n          this.moveBlockX(1);\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.moveBlockDown();\n    }, 500);\n  }\n\n  render() {\n    // console.log(this.state)\n    return React.createElement(StyledApp, {\n      onKeyDown: e => this.blockControls(e),\n      tabIndex: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.matrix.map((row, i) => row.map((cell, index) => {\n      return React.createElement(Block, {\n        key: i * index + Math.random(),\n        background: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"123\"));\n  }\n\n}\n\nexport default App;\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`;","map":{"version":3,"sources":["/Users/minic/Projects/tetris/src/App.js"],"names":["React","styled","Block","quadBlock","x","y","lineBlock","tBlock","zBlock","sBlock","rBlock","backRBlock","blocks","App","Component","state","matrix","Array","fill","blockPos","Math","floor","random","moveBlockDown","console","log","newMatrix","map","row","cell","newBlockPos","cellPos","length","floorCheck","find","randomBlock","setState","moveBlockX","side","isLeftWall","Boolean","isRightWall","blockControls","e","key","componentDidMount","setInterval","render","i","index","StyledApp","div"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\n\nimport Block from './components/Block'\n\nconst quadBlock = [{x: 3, y: 0}, {x: 4, y: 0}, {x: 3, y: 1}, {x: 4, y: 1}]\nconst lineBlock = [{x: 4, y: 0}, {x: 4, y: 1}, {x: 4, y: 2}, {x: 4, y: 3}]\nconst tBlock = [{x: 4, y: 0}, {x: 4, y: 1}, {x: 3, y: 1}, {x: 5, y: 1}]\nconst zBlock = [{x: 3, y: 0}, {x: 4, y: 0}, {x: 4, y: 1}, {x: 5, y: 1}]\nconst sBlock = [{x: 4, y: 0}, {x: 3, y: 0}, {x: 3, y: 1}, {x: 2, y: 1}]\nconst rBlock = [{x: 3, y: 0}, {x: 3, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}]\nconst backRBlock = [{x: 3, y: 0}, {x: 3, y: 1}, {x: 4, y: 1}, {x: 5, y: 1}]\n\nconst blocks = [quadBlock, lineBlock, tBlock, zBlock, sBlock, rBlock, backRBlock];\n\nclass App extends React.Component {\n  state = {\n    matrix: new Array(24).fill(new Array(10).fill(0)),\n    blockPos: blocks[Math.floor(Math.random() * 7)],\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.moveBlockDown()\n    }, 500)\n  }\n\n  moveBlockDown = () => {\n    const {matrix, blockPos} = this.state\n\n    console.log(blockPos)\n\n    let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0))\n    let newBlockPos = blockPos.map(cellPos => ({...cellPos}))\n\n    newBlockPos = newBlockPos.map(cellPos => {\n      newMatrix[cellPos.y][cellPos.x] = 1\n\n      if (cellPos.y >= matrix.length - 1 || newMatrix[cellPos.y + 1][cellPos.x] === 2) {\n        return true\n      } else {\n        return {...cellPos, y: cellPos.y + 1}\n      }\n    })\n\n    const floorCheck = newBlockPos.find(cell => cell === true)\n\n    const randomBlock = Math.floor(Math.random() * 8)\n\n    if (floorCheck) {\n      newMatrix = newMatrix.map(row => row.map(cell => cell === 1 ? 2 : cell))\n      newBlockPos = blocks[randomBlock]\n    }\n\n\n    this.setState({\n      matrix: newMatrix,\n      blockPos: newBlockPos\n    })\n  }\n\n  moveBlockX = (side) => {\n    const {matrix, blockPos} = this.state\n    const isLeftWall = Boolean(blockPos.find(cellPos => cellPos.x === 0))\n    const isRightWall = Boolean(blockPos.find(cellPos => cellPos.x === 9))\n\n    if (side > 0 && isRightWall) {\n      return null\n    }\n\n    if (side < 0 && isLeftWall) {\n      return null\n    }\n\n    let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0))\n    let newBlockPos = blockPos.map(cellPos => ({...cellPos, x: cellPos.x + side}))\n\n    newBlockPos.map(cellPos => {\n      newMatrix[cellPos.y][cellPos.x] = 1\n    })\n\n    this.setState({\n      blockPos: newBlockPos,\n      matrix: newMatrix\n    })\n  }\n\n  blockControls = (e) => {\n    switch(e.key) {\n      case 'ArrowLeft':\n        this.moveBlockX(-1)\n        break\n      case 'ArrowRight':\n        this.moveBlockX(1)\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n\n    // console.log(this.state)\n\n    return (\n      <StyledApp\n        onKeyDown={(e) => this.blockControls(e)}\n        tabIndex={0}\n      >\n\n        {\n          this.state.matrix.map((row, i) => row.map((cell, index) => {\n              return (\n                <Block key={i * index + Math.random()} background={cell}/>\n              )\n          }))\n        }\n\n        <div>\n          123\n        </div>\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`\n"]},"metadata":{},"sourceType":"module"}
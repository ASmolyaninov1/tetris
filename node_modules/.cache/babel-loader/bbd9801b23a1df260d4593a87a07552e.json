{"ast":null,"code":"var _jsxFileName = \"/Users/minic/Projects/tetris/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport Block from './components/Block';\n\nconst moveBlockDown = (pos, matrix, setMatrix) => {};\n\nconst App = () => {\n  const [matrix, setMatrix] = useState(new Array(24).fill(new Array(10).fill(0)));\n  return React.createElement(StyledApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, matrix.map(row => row.map(cell => {\n    if (cell === 1) return React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default App;\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`;","map":{"version":3,"sources":["/Users/minic/Projects/tetris/src/App.js"],"names":["React","useState","styled","Block","moveBlockDown","pos","matrix","setMatrix","App","Array","fill","map","row","cell","StyledApp","div"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,SAAd,KAA4B,CAEjD,CAFD;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACF,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAClC,IAAIQ,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAID,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,CAAnB,CADkC,CAApC;AAIA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,MAAM,CAACK,GAAP,CAAWC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQE,IAAI,IAAI;AAChC,QAAIA,IAAI,KAAK,CAAb,EACA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GALiB,CAAlB,CAFJ,CADF;AAYD,CAjBD;;AAmBA,eAAeL,GAAf;AAEA,MAAMM,SAAS,GAAGZ,MAAM,CAACa,GAAI;;;;;;CAA7B","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport styled from 'styled-components';\n\nimport Block from './components/Block'\n\nconst moveBlockDown = (pos, matrix, setMatrix) => {\n\n}\n\nconst App = () => {\n  const [matrix, setMatrix] = useState(\n    new Array(24).fill(new Array(10).fill(0))\n  );\n\n  return (\n    <StyledApp>\n      {\n        matrix.map(row => row.map(cell => {\n          if (cell === 1)\n          return (\n            <Block />\n          )\n        }))\n      }\n    </StyledApp>\n  );\n}\n\nexport default App;\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`\n"]},"metadata":{},"sourceType":"module"}
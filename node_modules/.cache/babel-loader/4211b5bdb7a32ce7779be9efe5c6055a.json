{"ast":null,"code":"var _jsxFileName = \"/Users/minic/Projects/tetris/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport Block from './components/Block';\nconst quadBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 4,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 4,\n  y: 1\n}];\nconst lineBlock = [{\n  x: 4,\n  y: 0\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 4,\n  y: 2\n}, {\n  x: 4,\n  y: 3\n}];\nconst tBlock = [{\n  x: 4,\n  y: 0\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 5,\n  y: 1\n}];\nconst zBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 4,\n  y: 0\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 5,\n  y: 1\n}];\nconst sBlock = [{\n  x: 4,\n  y: 0\n}, {\n  x: 3,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 2,\n  y: 1\n}];\nconst rBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 2,\n  y: 1\n}, {\n  x: 1,\n  y: 1\n}];\nconst backRBlock = [{\n  x: 3,\n  y: 0\n}, {\n  x: 3,\n  y: 1\n}, {\n  x: 4,\n  y: 1\n}, {\n  x: 5,\n  y: 1\n}];\nconst blocks = [quadBlock, lineBlock, tBlock, zBlock, sBlock, rBlock, backRBlock];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      matrix: new Array(24).fill(new Array(10).fill(0)),\n      blockPos: blocks[Math.floor(Math.random() * 7)],\n      score: 0\n    };\n\n    this.moveBlockDown = () => {\n      const {\n        matrix,\n        blockPos,\n        score\n      } = this.state;\n      console.log(blockPos);\n      let newScore = score;\n      let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0));\n      let newBlockPos = blockPos.map(cellPos => ({ ...cellPos\n      }));\n      newBlockPos = newBlockPos.map(cellPos => {\n        newMatrix[cellPos.y][cellPos.x] = 1;\n\n        if (cellPos.y >= matrix.length - 1 || newMatrix[cellPos.y + 1][cellPos.x] === 2) {\n          return true;\n        } else {\n          return { ...cellPos,\n            y: cellPos.y + 1\n          };\n        }\n      });\n      const floorCheck = newBlockPos.find(cell => cell === true);\n      const randomBlock = Math.floor(Math.random() * 7);\n\n      if (floorCheck) {\n        newMatrix = newMatrix.map(row => row.map(cell => cell === 1 ? 2 : cell)).filter(row => row.includes(0));\n\n        if (newMatrix.length < 24) {\n          for (let i = 0; i <= 24 - newMatrix.length; i++) {\n            newMatrix = [new Array(10).fill(0), ...newMatrix];\n            newScore += 10;\n          }\n        }\n\n        newBlockPos = blocks[randomBlock];\n      }\n\n      this.setState({\n        matrix: newMatrix,\n        blockPos: newBlockPos,\n        score: newScore\n      });\n    };\n\n    this.moveBlockX = side => {\n      const {\n        matrix,\n        blockPos\n      } = this.state;\n      const isLeftWall = Boolean(blockPos.find(cellPos => cellPos.x === 0 || matrix[cellPos.y][cellPos.x - 1] === 2));\n      const isRightWall = Boolean(blockPos.find(cellPos => cellPos.x === 9 || matrix[cellPos.y][cellPos.x + 1] === 2));\n\n      if (side > 0 && isRightWall) {\n        return null;\n      }\n\n      if (side < 0 && isLeftWall) {\n        return null;\n      }\n\n      let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0));\n      let newBlockPos = blockPos.map(cellPos => ({ ...cellPos,\n        x: cellPos.x + side\n      }));\n      newBlockPos.forEach(cellPos => {\n        newMatrix[cellPos.y][cellPos.x] = 1;\n      });\n      this.setState({\n        blockPos: newBlockPos,\n        matrix: newMatrix\n      });\n    };\n\n    this.blockControls = e => {\n      switch (e.key) {\n        case 'ArrowLeft':\n          this.moveBlockX(-1);\n          break;\n\n        case 'ArrowRight':\n          this.moveBlockX(1);\n          break;\n\n        case 'ArrowDown':\n          this.moveBlockDown();\n          break;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.moveBlockDown();\n    }, 500);\n  }\n\n  render() {\n    // console.log(this.state)\n    return React.createElement(StyledApp, {\n      onKeyDown: e => this.blockControls(e),\n      tabIndex: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.matrix.map((row, i) => row.map((cell, index) => {\n      return React.createElement(Block, {\n        key: i * index + Math.random(),\n        background: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.score));\n  }\n\n}\n\nexport default App;\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`;","map":{"version":3,"sources":["/Users/minic/Projects/tetris/src/App.js"],"names":["React","styled","Block","quadBlock","x","y","lineBlock","tBlock","zBlock","sBlock","rBlock","backRBlock","blocks","App","Component","state","matrix","Array","fill","blockPos","Math","floor","random","score","moveBlockDown","console","log","newScore","newMatrix","map","row","cell","newBlockPos","cellPos","length","floorCheck","find","randomBlock","filter","includes","i","setState","moveBlockX","side","isLeftWall","Boolean","isRightWall","forEach","blockControls","e","key","componentDidMount","setInterval","render","index","StyledApp","div"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\n\nimport Block from './components/Block'\n\nconst quadBlock = [{x: 3, y: 0}, {x: 4, y: 0}, {x: 3, y: 1}, {x: 4, y: 1}]\nconst lineBlock = [{x: 4, y: 0}, {x: 4, y: 1}, {x: 4, y: 2}, {x: 4, y: 3}]\nconst tBlock = [{x: 4, y: 0}, {x: 4, y: 1}, {x: 3, y: 1}, {x: 5, y: 1}]\nconst zBlock = [{x: 3, y: 0}, {x: 4, y: 0}, {x: 4, y: 1}, {x: 5, y: 1}]\nconst sBlock = [{x: 4, y: 0}, {x: 3, y: 0}, {x: 3, y: 1}, {x: 2, y: 1}]\nconst rBlock = [{x: 3, y: 0}, {x: 3, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}]\nconst backRBlock = [{x: 3, y: 0}, {x: 3, y: 1}, {x: 4, y: 1}, {x: 5, y: 1}]\n\nconst blocks = [quadBlock, lineBlock, tBlock, zBlock, sBlock, rBlock, backRBlock];\n\nclass App extends React.Component {\n  state = {\n    matrix: new Array(24).fill(new Array(10).fill(0)),\n    blockPos: blocks[Math.floor(Math.random() * 7)],\n    score: 0\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.moveBlockDown()\n    }, 500)\n  }\n\n  moveBlockDown = () => {\n    const {matrix, blockPos, score} = this.state\n\n    console.log(blockPos)\n    let newScore = score\n    let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0))\n    let newBlockPos = blockPos.map(cellPos => ({...cellPos}))\n\n    newBlockPos = newBlockPos.map(cellPos => {\n      newMatrix[cellPos.y][cellPos.x] = 1\n\n      if (cellPos.y >= matrix.length - 1 || newMatrix[cellPos.y + 1][cellPos.x] === 2) {\n        return true\n      } else {\n        return {...cellPos, y: cellPos.y + 1}\n      }\n    })\n\n    const floorCheck = newBlockPos.find(cell => cell === true)\n\n    const randomBlock = Math.floor(Math.random() * 7)\n\n    if (floorCheck) {\n\n      newMatrix = newMatrix.map(row => row.map(cell => cell === 1 ? 2 : cell))\n        .filter(row => row.includes(0))\n\n      if (newMatrix.length < 24) {\n        for (let i = 0; i <= 24 - newMatrix.length; i++) {\n          newMatrix = [new Array(10).fill(0) ,...newMatrix]\n          newScore += 10\n        }\n      }\n\n      newBlockPos = blocks[randomBlock]\n    }\n\n\n    this.setState({\n      matrix: newMatrix,\n      blockPos: newBlockPos,\n      score: newScore\n    })\n  }\n\n  moveBlockX = (side) => {\n    const {matrix, blockPos} = this.state\n    const isLeftWall = Boolean(blockPos.find(cellPos => (cellPos.x === 0) || matrix[cellPos.y][cellPos.x - 1] === 2))\n    const isRightWall = Boolean(blockPos.find(cellPos => (cellPos.x === 9) || matrix[cellPos.y][cellPos.x + 1] === 2))\n\n    if (side > 0 && isRightWall) {\n      return null\n    }\n\n    if (side < 0 && isLeftWall) {\n      return null\n    }\n\n    let newMatrix = matrix.map(row => row.map(cell => cell === 2 ? cell : 0))\n    let newBlockPos = blockPos.map(cellPos => ({...cellPos, x: cellPos.x + side}))\n\n    newBlockPos.forEach(cellPos => {\n      newMatrix[cellPos.y][cellPos.x] = 1\n    })\n\n    this.setState({\n      blockPos: newBlockPos,\n      matrix: newMatrix\n    })\n  }\n\n  blockControls = (e) => {\n    switch(e.key) {\n      case 'ArrowLeft':\n        this.moveBlockX(-1)\n        break\n      case 'ArrowRight':\n        this.moveBlockX(1)\n        break\n      case 'ArrowDown':\n        this.moveBlockDown()\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n\n    // console.log(this.state)\n\n    return (\n      <StyledApp\n        onKeyDown={(e) => this.blockControls(e)}\n        tabIndex={0}\n      >\n        {\n          this.state.matrix.map((row, i) => row.map((cell, index) => {\n              return (\n                <Block key={i * index + Math.random()} background={cell}/>\n              )\n          }))\n        }\n        <div>\n          {this.state.score}\n        </div>\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`\n"]},"metadata":{},"sourceType":"module"}
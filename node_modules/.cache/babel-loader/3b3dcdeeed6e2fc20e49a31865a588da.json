{"ast":null,"code":"var _jsxFileName = \"/Users/minic/Projects/tetris/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport Block from './components/Block';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      matrix: new Array(24).fill(new Array(10).fill(0)),\n      blockPos: {\n        x: 0,\n        y: 0\n      }\n    };\n\n    this.moveBlockDown = () => {\n      const {\n        matrix,\n        blockPos\n      } = this.state;\n      console.log('matrix', matrix);\n      let newMatrix = matrix.map(row => [...row]);\n      console.log('newMatrix before', newMatrix);\n\n      if (blockPos.y > 0) {\n        newMatrix[blockPos.y - 1][blockPos.x] = 0;\n      }\n\n      newMatrix[blockPos.y][blockPos.x] = 1;\n      const newBlockPos = { ...blockPos,\n        y: 1\n      };\n      console.log('newMatrix after', newMatrix);\n      this.setState({\n        matrix: newMatrix,\n        blockPos: newBlockPos\n      });\n    };\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.moveBlockDown();\n    }, 1000);\n    timer();\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(StyledApp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.matrix.map((row, i) => row.map((cell, index) => {\n      const background = cell === 1;\n      return React.createElement(Block, {\n        key: i * index + Math.random(),\n        background: background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default App;\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`;","map":{"version":3,"sources":["/Users/minic/Projects/tetris/src/App.js"],"names":["React","styled","_","Block","App","Component","state","matrix","Array","fill","blockPos","x","y","moveBlockDown","console","log","newMatrix","map","row","newBlockPos","setState","componentDidMount","timer","setTimeout","render","i","cell","index","background","Math","random","StyledApp","div"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,MAAM,EAAE,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAID,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,CAAnB,CADF;AAENC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,CAAC,EAAE,CAAJ;AAAOC,QAAAA,CAAC,EAAE;AAAV;AAFJ,KADwB;;AAAA,SAchCC,aAdgC,GAchB,MAAM;AACpB,YAAM;AAACN,QAAAA,MAAD;AAASG,QAAAA;AAAT,UAAqB,KAAKJ,KAAhC;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;AAEA,UAAIS,SAAS,GAAGT,MAAM,CAACU,GAAP,CAAWC,GAAG,IAAI,CAAC,GAAGA,GAAJ,CAAlB,CAAhB;AAEAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,SAAhC;;AAEA,UAAIN,QAAQ,CAACE,CAAT,GAAa,CAAjB,EAAoB;AAClBI,QAAAA,SAAS,CAACN,QAAQ,CAACE,CAAT,GAAa,CAAd,CAAT,CAA0BF,QAAQ,CAACC,CAAnC,IAAwC,CAAxC;AACD;;AAEDK,MAAAA,SAAS,CAACN,QAAQ,CAACE,CAAV,CAAT,CAAsBF,QAAQ,CAACC,CAA/B,IAAoC,CAApC;AACA,YAAMQ,WAAW,GAAG,EAAC,GAAGT,QAAJ;AAAcE,QAAAA,CAAC,EAAE;AAAjB,OAApB;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,SAA/B;AAEA,WAAKI,QAAL,CAAc;AACZb,QAAAA,MAAM,EAAES,SADI;AAEZN,QAAAA,QAAQ,EAAES;AAFE,OAAd;AAID,KApC+B;AAAA;;AAMhCE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7B,WAAKV,aAAL;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIAS,IAAAA,KAAK;AACN;;AA0BDE,EAAAA,MAAM,GAAG;AAEPV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AAEA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,KAAKA,KAAL,CAAWC,MAAX,CAAkBU,GAAlB,CAAsB,CAACC,GAAD,EAAMO,CAAN,KAAYP,GAAG,CAACD,GAAJ,CAAQ,CAACS,IAAD,EAAOC,KAAP,KAAiB;AACvD,YAAMC,UAAU,GAAGF,IAAI,KAAK,CAA5B;AACA,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAED,CAAC,GAAGE,KAAJ,GAAYE,IAAI,CAACC,MAAL,EAAxB;AAAuC,QAAA,UAAU,EAAEF,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGH,KALiC,CAAlC,CAHJ,CADF;AAaD;;AAvD+B;;AA0DlC,eAAexB,GAAf;AAEA,MAAM2B,SAAS,GAAG9B,MAAM,CAAC+B,GAAI;;;;;;CAA7B","sourcesContent":["import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nimport Block from './components/Block'\n\nclass App extends React.Component {\n  state = {\n    matrix: new Array(24).fill(new Array(10).fill(0)),\n    blockPos: {x: 0, y: 0}\n  }\n\n  componentDidMount() {\n    const timer = setTimeout(() => {\n      this.moveBlockDown()\n    }, 1000)\n\n    timer()\n  }\n\n  moveBlockDown = () => {\n    const {matrix, blockPos} = this.state\n\n    console.log('matrix', matrix)\n\n    let newMatrix = matrix.map(row => [...row])\n\n    console.log('newMatrix before', newMatrix)\n\n    if (blockPos.y > 0) {\n      newMatrix[blockPos.y - 1][blockPos.x] = 0\n    }\n\n    newMatrix[blockPos.y][blockPos.x] = 1\n    const newBlockPos = {...blockPos, y: 1}\n\n    console.log('newMatrix after', newMatrix)\n\n    this.setState({\n      matrix: newMatrix,\n      blockPos: newBlockPos\n    })\n  }\n\n  render() {\n\n    console.log(this.state)\n\n    return (\n      <StyledApp>\n\n        {\n          this.state.matrix.map((row, i) => row.map((cell, index) => {\n              const background = cell === 1\n              return (\n                <Block key={i * index + Math.random()} background={background}/>\n              )\n          }))\n        }\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  background: #61dafb;\n  width: 300px;\n  height: 720px;\n`\n"]},"metadata":{},"sourceType":"module"}